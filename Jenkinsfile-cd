pipeline {
  agent any

  environment {
    DOCKER_IMAGE = 'vinay4729/primevideo-app:latest'
    CONTAINER_NAME = 'primevideo-app'
  }

  stages {
    stage('üõë Stop & Remove Old Container') {
      steps {
        script {
          sh """
            echo "üßπ Cleaning up old container and port 5000..."

            # Force remove container by name if it exists
            docker rm -f $CONTAINER_NAME 2>/dev/null || echo "No container named $CONTAINER_NAME"

            # Remove any containers using port 5000
            CONTAINERS=\$(docker ps -a --filter 'publish=5000' --format '{{.ID}}')
            if [ ! -z "\$CONTAINERS" ]; then
              echo "Removing container(s) using port 5000: \$CONTAINERS"
              docker rm -f \$CONTAINERS || true
            else
              echo "‚úÖ No containers using port 5000."
            fi

            # Kill any system process using port 5000
            if lsof -i :5000 | grep LISTEN; then
              echo "Killing system process using port 5000"
              fuser -k 5000/tcp || true
            else
              echo "‚úÖ Port 5000 is free."
            fi
          """
        }
      }
    }

    stage('üì• Pull Docker Image from DockerHub') {
      steps {
        echo "Pulling latest image: $DOCKER_IMAGE"
        sh "docker pull $DOCKER_IMAGE"
      }
    }

    stage('üöÄ Run New Docker Container') {
      steps {
        echo "Running container: $CONTAINER_NAME on port 5000"
        sh "docker run -d --name $CONTAINER_NAME --restart unless-stopped -p 5000:3000 $DOCKER_IMAGE"
      }
    }
  }

  post {
    success {
      echo '‚úÖ Deployment successful.'
    }
    failure {
      echo '‚ùå Deployment failed.'
    }
  }
}

